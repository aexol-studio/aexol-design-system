{"remainingRequest":"/Users/anialysiuk/Documents/projects/design-system/node_modules/docz-core/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/anialysiuk/Documents/projects/design-system/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":false,\"typescript\":true,\"parseProps\":false}]],\"plugins\":[[\"/Users/anialysiuk/Documents/projects/design-system/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/anialysiuk/Documents/projects/design-system/node_modules/react-hot-loader/babel.js\"],\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/anialysiuk/Documents/projects/design-system/node_modules/react-docgen-typescript-loader/dist/index.js?{}!/Users/anialysiuk/Documents/projects/design-system/src/components/Button.tsx","dependencies":[{"path":"/Users/anialysiuk/Documents/projects/design-system/src/components/Button.tsx","mtime":1548164784266},{"path":"/Users/anialysiuk/Documents/projects/design-system/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/anialysiuk/Documents/projects/design-system/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/anialysiuk/Documents/projects/design-system/node_modules/react-docgen-typescript-loader/dist/index.js","mtime":1547997814000}],"contextDependencies":[],"result":["var _jsxFileName = \"/Users/anialysiuk/Documents/projects/design-system/src/components/Button.tsx\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport * as React from 'react';\nimport * as classnames from 'classnames';\nimport * as styles from './styles/ButtonStyle';\nexport var Button = function Button(props) {\n  var _props$type = props.type,\n      type = _props$type === void 0 ? 'primary' : _props$type,\n      onClick = props.onClick;\n\n  var handleClick = function handleClick(e) {\n    if (onClick) {\n      onClick(e.currentTarget);\n    }\n  };\n\n  return React.createElement(\"button\", {\n    className: classnames(styles.Button, type),\n    onClick: handleClick,\n    type: type === 'submit' ? 'submit' : 'button',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, props.children);\n};\nvar _default = Button;\nexport default _default;\n\ntry {\n  // @ts-ignore\n  Button.displayName = \"Button\"; // @ts-ignore\n\n  Button.__docgenInfo = {\n    \"description\": \"\",\n    \"displayName\": \"Button\",\n    \"props\": {\n      \"type\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"type\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"ButtonType\"\n        }\n      },\n      \"onClick\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"onClick\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"(e: HTMLButtonElement) => void\"\n        }\n      }\n    }\n  }; // @ts-ignore\n\n  if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") // @ts-ignore\n    STORYBOOK_REACT_CLASSES[\"src/components/Button.tsx#Button\"] = {\n      docgenInfo: Button.__docgenInfo,\n      name: \"Button\",\n      path: \"src/components/Button.tsx#Button\"\n    };\n} catch (__react_docgen_typescript_loader_error) {}\n\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Button, \"Button\", \"/Users/anialysiuk/Documents/projects/design-system/src/components/Button.tsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/anialysiuk/Documents/projects/design-system/src/components/Button.tsx\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/anialysiuk/Documents/projects/design-system/src/components/Button.tsx"],"names":["React","classnames","styles","Button","props","type","onClick","handleClick","e","currentTarget","children","displayName","__docgenInfo","STORYBOOK_REACT_CLASSES","docgenInfo","name","path","__react_docgen_typescript_loader_error"],"mappings":";;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,UAAZ,MAA4B,YAA5B;AACA,OAAO,KAAKC,MAAZ,MAAwB,sBAAxB;AASA,OAAO,IAAMC,MAA6C,GAAG,SAAhDA,MAAgD,CAACC,KAAD,EAAW;AAAA,oBAIlEA,KAJkE,CAEpEC,IAFoE;AAAA,MAEpEA,IAFoE,4BAE7D,SAF6D;AAAA,MAGpEC,OAHoE,GAIlEF,KAJkE,CAGpEE,OAHoE;;AAKtE,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,CAAD,EAAgD;AAClE,QAAIF,OAAJ,EAAa;AACXA,MAAAA,OAAO,CAACE,CAAC,CAACC,aAAH,CAAP;AACD;AACF,GAJD;;AAMA,SACE;AACE,IAAA,SAAS,EAAER,UAAU,CACnBC,MAAM,CAACC,MADY,EAEnBE,IAFmB,CADvB;AAKE,IAAA,OAAO,EAAEE,WALX;AAME,IAAA,IAAI,EAAEF,IAAI,KAAK,QAAT,GAAoB,QAApB,GAA+B,QANvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGD,KAAK,CAACM,QART,CADF;AAYD,CAvBM;eAyBQP,M;AAAf;;AACA,IAAI;AACA;AACAA,EAAAA,MAAM,CAACQ,WAAP,GAAqB,QAArB,CAFA,CAGA;;AACAR,EAAAA,MAAM,CAACS,YAAP,GAAsB;AAAE,mBAAe,EAAjB;AAAqB,mBAAe,QAApC;AAA8C,aAAS;AAAE,cAAQ;AAAE,wBAAgB,IAAlB;AAAwB,uBAAe,EAAvC;AAA2C,gBAAQ,MAAnD;AAA2D,oBAAY,KAAvE;AAA8E,gBAAQ;AAAE,kBAAQ;AAAV;AAAtF,OAAV;AAA4H,iBAAW;AAAE,wBAAgB,IAAlB;AAAwB,uBAAe,EAAvC;AAA2C,gBAAQ,SAAnD;AAA8D,oBAAY,KAA1E;AAAiF,gBAAQ;AAAE,kBAAQ;AAAV;AAAzF;AAAvI;AAAvD,GAAtB,CAJA,CAKA;;AACA,MAAI,OAAOC,uBAAP,KAAmC,WAAvC,EACI;AACAA,IAAAA,uBAAuB,CAAC,kCAAD,CAAvB,GAA8D;AAAEC,MAAAA,UAAU,EAAEX,MAAM,CAACS,YAArB;AAAmCG,MAAAA,IAAI,EAAE,QAAzC;AAAmDC,MAAAA,IAAI,EAAE;AAAzD,KAA9D;AACP,CATD,CAUA,OAAOC,sCAAP,EAA+C,CAAG;;;;;;;;;;;;;0BApCrCd,M","sourcesContent":["import * as React from 'react';\nimport * as classnames from 'classnames';\nimport * as styles from './styles/ButtonStyle';\n\ntype ButtonType = 'primary' | 'danger' | 'success' | 'submit'\n\nexport interface IButtonProps {\n  type?: ButtonType,\n  onClick?: (e: HTMLButtonElement) => void,\n}\n\nexport const Button: React.FunctionComponent<IButtonProps> = (props) => {\n  const {\n    type = 'primary',\n    onClick\n  } = props\n  const handleClick = (e: React.SyntheticEvent<HTMLButtonElement>) => {\n    if (onClick) {\n      onClick(e.currentTarget)\n    }\n  }\n\n  return (\n    <button\n      className={classnames(\n        styles.Button,\n        type\n      )}\n      onClick={handleClick}\n      type={type === 'submit' ? 'submit' : 'button'}\n    >\n      {props.children}\n    </button>\n  )\n};\n\nexport default Button;\ntry {\n    // @ts-ignore\n    Button.displayName = \"Button\";\n    // @ts-ignore\n    Button.__docgenInfo = { \"description\": \"\", \"displayName\": \"Button\", \"props\": { \"type\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"type\", \"required\": false, \"type\": { \"name\": \"ButtonType\" } }, \"onClick\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onClick\", \"required\": false, \"type\": { \"name\": \"(e: HTMLButtonElement) => void\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Button.tsx#Button\"] = { docgenInfo: Button.__docgenInfo, name: \"Button\", path: \"src/components/Button.tsx#Button\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"]}]}